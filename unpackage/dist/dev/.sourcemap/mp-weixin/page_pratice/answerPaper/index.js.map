{"version":3,"sources":["uni-app:///main.js","webpack:///D:/project/bs/chinese-doctor/page_pratice/answerPaper/index.vue?1d12","webpack:///D:/project/bs/chinese-doctor/page_pratice/answerPaper/index.vue?7245","webpack:///D:/project/bs/chinese-doctor/page_pratice/answerPaper/index.vue?bd74","webpack:///D:/project/bs/chinese-doctor/page_pratice/answerPaper/index.vue?d978","uni-app:///page_pratice/answerPaper/index.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","name","components","answerPage","data","paper","scoreList","id","methods","toPaperSubmit","product","user_score","question_set_answer","flag","time","onLoad","list","question_bank","mounted"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,cAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAA8H;AAC9H;AACyD;AACL;;;AAGpD;AAC2K;AAC3K,gBAAgB,oLAAU;AAC1B,EAAE,2EAAM;AACR,EAAE,4FAAM;AACR,EAAE,qGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,gGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA6nB,CAAgB,kpBAAG,EAAC,C;;;;;;;;;;;;;;;;;;ACajpB;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA,eACA;EACAC;EACAC;IAAAC;EAAA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAJ;IACA;EACA;EACAK;IAAA;IACA;IACA;IACA;IACA;IACAC;MACAC;QACA;MACA;IACA;IACA;EACA;EACAC;AACA;AAAA,2B","file":"page_pratice/answerPaper/index.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './page_pratice/answerPaper/index.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=6b3e0e36&scoped=true&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b3e0e36\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"page_pratice/answerPaper/index.vue\"\nexport default component.exports","export * from \"-!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=template&id=6b3e0e36&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!C:\\\\sort\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./index.vue?vue&type=script&lang=js&\"","<template>\n  <view class=\"\">\n    <answerPage\n      :paper=\"paper\"\n      :type=\"3\"\n      :scoreList=\"scoreList\"\n      @toPaperSubmit=\"toPaperSubmit\"\n    ></answerPage>\n  </view>\n</template>\n\n<script>\nimport answerPage from '@/components/answerPage'\nimport { query, question_bank, paper_user } from '@/common/utils'\nexport default {\n  name: 'answerPaper',\n  components: { answerPage },\n  data() {\n    return {\n      paper: [],\n      scoreList: [],\n      id: '',\n    }\n  },\n  methods: {\n    toPaperSubmit(score, list, time) {\n      let product = paper_user.getWithoutData(this.id)\n      product.set({\n        user_score: score + '',\n        question_set_answer: list,\n        flag: true,\n        time: time,\n      })\n      product.update()\n    },\n  },\n  onLoad(e) {\n    // console.log(e.question_set_score)\n    let list = e.list.split(',')\n    let scoreList = e.question_set_score.split(',')\n    this.id = e.id\n    list.map((e) => {\n      question_bank.get(e).then((res) => {\n        this.paper.push(res.data)\n      })\n    })\n    this.scoreList = scoreList\n  },\n  mounted() {},\n}\n</script>\n\n<style scoped></style>\n"],"sourceRoot":""}